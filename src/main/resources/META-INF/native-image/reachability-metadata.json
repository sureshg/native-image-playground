{
  "reflection": [
    {
      "type": "[Lio.ktor.network.selector.SelectInterest;"
    },
    {
      "type": "android.os.Build$VERSION"
    },
    {
      "type": "com.sun.crypto.provider.GaloisCounterMode$AESGCM",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "com.sun.crypto.provider.HmacCore$HmacSHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "dev.suresh.model.KtVersion",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "dev.suresh.service.JavaPlugin"
    },
    {
      "type": "dev.suresh.service.KotlinPlugin"
    },
    {
      "type": "io.helidon.common.LazyValueImpl",
      "fields": [
        {
          "name": "loaded"
        },
        {
          "name": "theLock"
        }
      ]
    },
    {
      "type": "io.helidon.common.concurrency.limits.AimdLimitProvider"
    },
    {
      "type": "io.helidon.common.concurrency.limits.FixedLimitProvider"
    },
    {
      "type": "io.helidon.common.concurrency.limits.spi.LimitProvider"
    },
    {
      "type": "io.helidon.common.mapper.DefaultMapperProvider__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.common.mapper.MappersFactory__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.common.mapper.MappersImpl__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.common.mapper.spi.MapperProvider"
    },
    {
      "type": "io.helidon.config.ConfigProvider__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.config.MetaConfigFactory__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.config.PropertiesConfigParser"
    },
    {
      "type": "io.helidon.config.spi.ConfigFilter"
    },
    {
      "type": "io.helidon.config.spi.ConfigParser"
    },
    {
      "type": "io.helidon.service.registry.EventManagerImpl__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.service.registry.InterceptionMetadata__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.service.registry.PerRequestScopeHandler__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.service.registry.Scopes__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.service.registry.ServiceRegistry__ServiceDescriptor",
      "fields": [
        {
          "name": "INSTANCE"
        }
      ]
    },
    {
      "type": "io.helidon.webserver.cors.CorsFeatureProvider"
    },
    {
      "type": "io.helidon.webserver.http1.Http1ConnectionProvider"
    },
    {
      "type": "io.helidon.webserver.http1.Http1ProtocolConfigProvider"
    },
    {
      "type": "io.helidon.webserver.staticcontent.StaticContentFeatureProvider"
    },
    {
      "type": "io.ktor.client.HttpClient",
      "fields": [
        {
          "name": "closed"
        }
      ]
    },
    {
      "type": "io.ktor.client.call.HttpClientCall",
      "fields": [
        {
          "name": "received"
        }
      ]
    },
    {
      "type": "io.ktor.client.engine.HttpClientEngineBase",
      "fields": [
        {
          "name": "closed"
        }
      ]
    },
    {
      "type": "io.ktor.client.engine.cio.Endpoint",
      "fields": [
        {
          "name": "connections"
        }
      ]
    },
    {
      "type": "io.ktor.network.selector.InterestSuspensionsMap",
      "fields": [
        {
          "name": "acceptHandlerReference"
        },
        {
          "name": "connectHandlerReference"
        },
        {
          "name": "readHandlerReference"
        },
        {
          "name": "writeHandlerReference"
        }
      ]
    },
    {
      "type": "io.ktor.network.selector.LockFreeMPSCQueue",
      "fields": [
        {
          "name": "curRef"
        }
      ]
    },
    {
      "type": "io.ktor.network.selector.LockFreeMPSCQueueCore",
      "fields": [
        {
          "name": "nextRef"
        },
        {
          "name": "stateRef"
        }
      ]
    },
    {
      "type": "io.ktor.network.selector.SelectableBase",
      "fields": [
        {
          "name": "_interestedOps"
        }
      ]
    },
    {
      "type": "io.ktor.network.sockets.SocketBase",
      "fields": [
        {
          "name": "actualCloseFlag"
        },
        {
          "name": "closeFlag"
        },
        {
          "name": "readerJob"
        },
        {
          "name": "writerJob"
        }
      ]
    },
    {
      "type": "io.ktor.util.collections.CopyOnWriteHashMap",
      "fields": [
        {
          "name": "current"
        }
      ]
    },
    {
      "type": "io.ktor.utils.io.ByteChannel",
      "fields": [
        {
          "name": "_closedCause"
        },
        {
          "name": "suspensionSlot"
        }
      ]
    },
    {
      "type": "io.ktor.utils.io.pool.DefaultPool",
      "fields": [
        {
          "name": "top"
        }
      ]
    },
    {
      "type": "io.ktor.websocket.DefaultWebSocketSessionImpl",
      "fields": [
        {
          "name": "closed"
        },
        {
          "name": "pinger"
        },
        {
          "name": "started"
        }
      ]
    },
    {
      "type": "io.rsocket.kotlin.connection.KeepAliveHandler",
      "fields": [
        {
          "name": "lastMark$volatile"
        }
      ]
    },
    {
      "type": "io.rsocket.kotlin.connection.StreamIdGenerator",
      "fields": [
        {
          "name": "streamId$volatile"
        }
      ]
    },
    {
      "type": "io.rsocket.kotlin.internal.PayloadFlow",
      "fields": [
        {
          "name": "consumed$volatile"
        }
      ]
    },
    {
      "type": "java.lang.ClassLoader",
      "fields": [
        {
          "name": "classLoaderValueMap"
        }
      ]
    },
    {
      "type": "java.net.StandardSocketOptions"
    },
    {
      "type": "java.security.AlgorithmParametersSpi"
    },
    {
      "type": "java.security.KeyStoreSpi"
    },
    {
      "type": "java.security.interfaces.ECPrivateKey"
    },
    {
      "type": "java.security.interfaces.ECPublicKey"
    },
    {
      "type": "java.security.interfaces.RSAPrivateKey"
    },
    {
      "type": "java.security.interfaces.RSAPublicKey"
    },
    {
      "type": "jdk.internal.misc.Unsafe"
    },
    {
      "type": "kotlin.reflect.jvm.internal.ReflectionFactoryImpl"
    },
    {
      "type": "kotlinx.coroutines.CancellableContinuationImpl",
      "fields": [
        {
          "name": "_decisionAndIndex$volatile"
        },
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CancelledContinuation",
      "fields": [
        {
          "name": "_resumed$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.CompletedExceptionally",
      "fields": [
        {
          "name": "_handled$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.EventLoopImplBase",
      "fields": [
        {
          "name": "_delayed$volatile"
        },
        {
          "name": "_isCompleted$volatile"
        },
        {
          "name": "_queue$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.InvokeOnCancelling",
      "fields": [
        {
          "name": "_invoked$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport",
      "fields": [
        {
          "name": "_parentHandle$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.JobSupport$Finishing",
      "fields": [
        {
          "name": "_exceptionsHolder$volatile"
        },
        {
          "name": "_isCompleting$volatile"
        },
        {
          "name": "_rootCause$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.channels.BufferedChannel",
      "fields": [
        {
          "name": "_closeCause$volatile"
        },
        {
          "name": "bufferEnd$volatile"
        },
        {
          "name": "bufferEndSegment$volatile"
        },
        {
          "name": "closeHandler$volatile"
        },
        {
          "name": "completedExpandBuffersAndPauseFlag$volatile"
        },
        {
          "name": "receiveSegment$volatile"
        },
        {
          "name": "receivers$volatile"
        },
        {
          "name": "sendSegment$volatile"
        },
        {
          "name": "sendersAndCloseStatus$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.ConcurrentLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.DispatchedContinuation",
      "fields": [
        {
          "name": "_reusableCancellableContinuation$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LimitedDispatcher",
      "fields": [
        {
          "name": "runningWorkers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeLinkedListNode",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_prev$volatile"
        },
        {
          "name": "_removedRef$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueue",
      "fields": [
        {
          "name": "_cur$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.LockFreeTaskQueueCore",
      "fields": [
        {
          "name": "_next$volatile"
        },
        {
          "name": "_state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.Segment",
      "fields": [
        {
          "name": "cleanedAndPointers$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.internal.ThreadSafeHeap",
      "fields": [
        {
          "name": "_size$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler",
      "fields": [
        {
          "name": "_isTerminated$volatile"
        },
        {
          "name": "controlState$volatile"
        },
        {
          "name": "parkedWorkersStack$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.CoroutineScheduler$Worker",
      "fields": [
        {
          "name": "workerCtl$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.scheduling.WorkQueue",
      "fields": [
        {
          "name": "blockingTasksInBuffer$volatile"
        },
        {
          "name": "consumerIndex$volatile"
        },
        {
          "name": "lastScheduledTask$volatile"
        },
        {
          "name": "producerIndex$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.selects.SelectImplementation",
      "fields": [
        {
          "name": "state$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.coroutines.sync.SemaphoreAndMutexImpl",
      "fields": [
        {
          "name": "_availablePermits$volatile"
        },
        {
          "name": "deqIdx$volatile"
        },
        {
          "name": "enqIdx$volatile"
        },
        {
          "name": "head$volatile"
        },
        {
          "name": "tail$volatile"
        }
      ]
    },
    {
      "type": "kotlinx.io.RefCountingCopyTracker",
      "fields": [
        {
          "name": "copyCount"
        }
      ]
    },
    {
      "type": "org.slf4j.nop.NOPServiceProvider"
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.NativePRNG$NonBlocking",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.security.SecureRandomParameters"
          ]
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SHA2$SHA256",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.SecureRandom",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.X509Factory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.provider.certpath.PKIXCertPathValidator",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSAKeyFactory$Legacy",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.rsa.RSASignature$SHA256withRSA",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": []
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityInfoAccessExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.AuthorityKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.BasicConstraintsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CRLDistributionPointsExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.CertificatePoliciesExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.ExtendedKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.IssuerAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.KeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.NetscapeCertTypeExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.PrivateKeyUsageExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectAlternativeNameExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    },
    {
      "type": "sun.security.x509.SubjectKeyIdentifierExtension",
      "methods": [
        {
          "name": "<init>",
          "parameterTypes": [
            "java.lang.Boolean",
            "java.lang.Object"
          ]
        }
      ]
    }
  ],
  "resources": [
    {
      "glob": "META-INF/helidon/feature-metadata.properties"
    },
    {
      "glob": "META-INF/helidon/media-types.properties"
    },
    {
      "glob": "META-INF/helidon/serial-config.properties"
    },
    {
      "glob": "META-INF/helidon/service-registry.json"
    },
    {
      "glob": "META-INF/helidon/service.loader"
    },
    {
      "glob": "META-INF/services/io.helidon.common.concurrency.limits.spi.LimitProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.common.mapper.spi.MapperProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.common.media.type.spi.MediaTypeDetector"
    },
    {
      "glob": "META-INF/services/io.helidon.common.resumable.ResumableSupport"
    },
    {
      "glob": "META-INF/services/io.helidon.common.tls.spi.TlsManagerProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.config.spi.ConfigFilter"
    },
    {
      "glob": "META-INF/services/io.helidon.config.spi.ConfigParser"
    },
    {
      "glob": "META-INF/services/io.helidon.http.encoding.spi.ContentEncodingProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.http.media.spi.MediaSupportProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.logging.common.spi.LoggingProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.webserver.http.spi.SinkProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.webserver.http1.spi.Http1UpgradeProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.webserver.spi.ProtocolConfigProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.webserver.spi.ServerConnectionSelectorProvider"
    },
    {
      "glob": "META-INF/services/io.helidon.webserver.spi.ServerFeatureProvider"
    },
    {
      "glob": "META-INF/services/java.lang.Runnable"
    },
    {
      "glob": "META-INF/services/java.net.spi.InetAddressResolverProvider"
    },
    {
      "glob": "META-INF/services/java.net.spi.URLStreamHandlerProvider"
    },
    {
      "glob": "META-INF/services/java.nio.channels.spi.SelectorProvider"
    },
    {
      "glob": "META-INF/services/java.nio.charset.spi.CharsetProvider"
    },
    {
      "glob": "META-INF/services/java.time.zone.ZoneRulesProvider"
    },
    {
      "glob": "META-INF/services/java.util.concurrent.Callable"
    },
    {
      "glob": "META-INF/services/org.slf4j.spi.SLF4JServiceProvider"
    },
    {
      "glob": "io/helidon/common/media/type/default-media-types.properties"
    },
    {
      "glob": "message.txt"
    },
    {
      "glob": "static"
    },
    {
      "module": "java.base",
      "glob": "java/util/currency.data"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfc.nrm"
    },
    {
      "module": "java.base",
      "glob": "jdk/internal/icu/impl/data/icudt76b/nfkc.nrm"
    },
    {
      "module": "java.logging",
      "glob": "sun/util/logging/resources/logging_en.properties"
    },
    {
      "module": "java.logging",
      "glob": "sun/util/logging/resources/logging_en_US.properties"
    }
  ],
  "bundles": [],
  "jni": [
    {
      "type": "java.lang.Boolean",
      "methods": [
        {
          "name": "getBoolean",
          "parameterTypes": [
            "java.lang.String"
          ]
        }
      ]
    },
    {
      "type": "sun.management.VMManagementImpl",
      "fields": [
        {
          "name": "compTimeMonitoringSupport"
        },
        {
          "name": "currentThreadCpuTimeSupport"
        },
        {
          "name": "objectMonitorUsageSupport"
        },
        {
          "name": "otherThreadCpuTimeSupport"
        },
        {
          "name": "remoteDiagnosticCommandsSupport"
        },
        {
          "name": "synchronizerUsageSupport"
        },
        {
          "name": "threadAllocatedMemorySupport"
        },
        {
          "name": "threadContentionMonitoringSupport"
        }
      ]
    }
  ]
}